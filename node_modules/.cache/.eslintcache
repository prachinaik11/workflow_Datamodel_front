[{"C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\index.js":"1","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\App.js":"2","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\components\\NavBar.js":"3","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\AdminMain.js":"4","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\Home.js":"5","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\Tasks.js":"6","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\AddTask.js":"7","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\UserMain.js":"8","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\UsertaskIns.js":"9","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\AddAction.js":"10","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\Admincreate.js":"11"},{"size":216,"mtime":1682170705855,"results":"12","hashOfConfig":"13"},{"size":1293,"mtime":1682170705851,"results":"14","hashOfConfig":"13"},{"size":2051,"mtime":1682186808896,"results":"15","hashOfConfig":"13"},{"size":5248,"mtime":1682254748059,"results":"16","hashOfConfig":"13"},{"size":1566,"mtime":1682229300394,"results":"17","hashOfConfig":"13"},{"size":2710,"mtime":1682246522713,"results":"18","hashOfConfig":"13"},{"size":4937,"mtime":1682170705858,"results":"19","hashOfConfig":"13"},{"size":4216,"mtime":1682170705864,"results":"20","hashOfConfig":"13"},{"size":5896,"mtime":1682170705864,"results":"21","hashOfConfig":"13"},{"size":5588,"mtime":1682245474737,"results":"22","hashOfConfig":"13"},{"size":1887,"mtime":1682170705861,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"mp2mat",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\index.js",[],[],[],"C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\App.js",["63","64","65"],[],"import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\r\nimport NavBar from './components/NavBar'\r\nimport Home from './services/Home'\r\nimport AddTask from './services/AddTask';\r\nimport Adminmain from './services/AdminMain';\r\nimport Admincr from './services/Admincreate';\r\nimport Tasks from './services/Tasks';\r\nimport AddAction from './services/AddAction';\r\nimport UserMain from './services/UserMain';\r\nimport UsertaskIns from './services/UsertaskIns';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n    {\r\n        <Router>\r\n          <NavBar/>\r\n          <Routes>\r\n          <Route exact path=\"/\" element={<Home/>} /> \r\n          <Route exact path=\"/addtask/:id\" element={<AddTask />} />\r\n          <Route exact path=\"/adminmain\" element={<Adminmain />} />\r\n          <Route exact path=\"/admincr\" element={<Admincr />} />\r\n          <Route exact path=\"/viewtask/:id\" element={<Tasks />} />\r\n          <Route exact path=\"/addaction/:wid/:tid\" element={<AddAction />} />\r\n          <Route exact path=\"/usermain/:id\" element={<UserMain />} /> \r\n          <Route exact path=\"/userins/:id\" element={<UsertaskIns />} />\r\n          </Routes>\r\n        </Router>\r\n      }\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\nexport default App;\r\n","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\components\\NavBar.js",["66","67"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n/*\r\n  This component is used for rendering the Nav Bar which contains the following,\r\n  - Welcome message for the logged in user\r\n  - Logout Button\r\n  - In more complex webpages you can include routes here with the help of React-Router\r\n*/\r\nconst NavBar = () => {\r\n  // If the Logout button has been clicked then clear the loggedInUser object from localStorage and\r\n  // update \"user\" state to null, in order to logout, otherwise on the next reload, the Effect hook will again read the user\r\n  // from the localStorage and relogin without showing the login form\r\n\r\n  // Fully styled Navbar using Bootstrap (it can be a big pain to style Navbars)\r\n  return (\r\n    <div className='regular-shadow mb-1'>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-info' id='menu'>\r\n        {/* UPDATE user.name PROPERTY IF IT DOESN'T EXIST */}\r\n        <h3>IIIT Bangalore Workflow</h3>\r\n        \r\n        {/* Bootstrap element for hamburger menu on collapse */}\r\n        <button\r\n          className='navbar-toggler' type='button'\r\n          data-toggle='collapse' data-target='#navbarSupportedContent'\r\n          aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'\r\n        >\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n        \r\n        {/* This menu will be collapsed under Hamburger Menu if screen size becomes small enough */}\r\n        <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              {/* Here you can put a Link of React-Router, not of use right now but helpful for the future */}\r\n            </li>\r\n          </ul>\r\n          <div className='inline my-2 my-lg-0'><Link className=\"btn btn-primary mx-2\" to={`/`}>Logout\r\n                                        </Link></div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\AdminMain.js",["68","69","70","71","72","73","74"],[],"C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\Home.js",["75"],[],"C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\Tasks.js",["76"],[],"C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\AddTask.js",["77"],[],"import axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function AddUser() {\r\n    let navigate=useNavigate()\r\n    const [task,setTask]=useState(\"\")\r\n    const {id}=useParams();\r\n    const [anyAll,setanyAll]=useState(false)\r\n    const [isfirst,setIsFirst]=useState(false)\r\n    const [role, setRole] = useState(\"\");\r\n    const [val, setVal]=useState(\"\");\r\n    var bodyFormData = new FormData();\r\n\r\n    if(role==='Role'){\r\n        bodyFormData.append('description', task);\r\n        bodyFormData.append('role',val);\r\n        bodyFormData.append('anyAll',anyAll);\r\n        bodyFormData.append('isFirst',isfirst);\r\n        var url = (`http://localhost:9191/task/addTaskUsingRole/${id}`)\r\n    }\r\n    else{\r\n        bodyFormData.append('description', task);\r\n        bodyFormData.append('userId',val);\r\n        bodyFormData.append('anyAll',anyAll);\r\n        bodyFormData.append('isFirst',isfirst);\r\n        var url = (`http://localhost:9191/task/addTaskUsingUser/${id}`)\r\n    }\r\n\r\n    \r\n    const onSubmit=async(e)=>{\r\n        axios({\r\n            method: \"post\",\r\n            url: url,\r\n            data: bodyFormData,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n            //navigate(`/`);\r\n            \r\n        });\r\n        navigate(`/viewtask/${id}`);\r\n        navigate(0);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <h2 className='text-center m-4'>Add Task</h2>\r\n                    <form onSubmit={(e)=>onSubmit(e)}>\r\n                    <div className='mb-3'>\r\n                        <label htmlFor='Name' className='form-label'>\r\n                            Description\r\n                        </label>\r\n                        <input\r\n                            type={\"text\"}\r\n                            className=\"form-control\"\r\n                            placeholder='Enter Task Name'\r\n                            name=\"wf_name\"\r\n                            //value=\"wf_name\"\r\n                            onChange={(e)=>setTask(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className='mb-3'>\r\n                        <label htmlFor='Name' className='form-label'>\r\n                        Select \r\n                        </label>\r\n                        <div><input type='radio' name=\"role\" value=\"ID\" on onChange={e=>setRole(e.target.value)}/> UseByID  </div>\r\n                        <div><input type='radio' name=\"role\" value=\"Role\" on onChange={e=>setRole(e.target.value)}/> UseByRole</div>\r\n                    </div>\r\n                    <div className='mb-3'>\r\n                        <label htmlFor='Name' className='form-label'>\r\n                        Select Task for Any or All \r\n                        </label>\r\n                        <div><input type='radio' name=\"anyAll\" value=\"any\" on onChange={e=>setanyAll(false)}/> Any  </div>\r\n                        <div><input type='radio' name=\"anyAll\" value=\"all\" on onChange={e=>setanyAll(true)}/> All</div>\r\n                    </div>\r\n                    <div className='mb-3'>\r\n                        <label htmlFor='Name' className='form-label'>\r\n                        First Task\r\n                        </label>\r\n                        <div><input type='radio' name=\"isfirst\" value=\"isfirst\" on onChange={e=>setIsFirst(true)}/> Ture  </div>\r\n                        <div><input type='radio' name=\"isfirst\" value=\"isfirst\" on onChange={e=>setIsFirst(false)}/> False</div>\r\n                    </div>\r\n                    \r\n                    Enter {role}\r\n                    <div className='mb-3'>\r\n                        <label htmlFor='Name' className='form-label'> \r\n                        </label>\r\n                        <input\r\n                            type={\"text\"}\r\n                            className=\"form-control\"\r\n                            placeholder=''\r\n                            name=\"comp_name\"\r\n                            //value=\"comp_name\"\r\n                            onChange={(e)=>setVal(e.target.value)}\r\n                            //required\r\n                        />\r\n                    </div>\r\n\r\n                    <button type='submit'  className='btn btn-outline-primary'>Submit</button>\r\n                    <Link className='btn btn-outline-danger mx-2' to={`/viewtask/${id}`}>Cancel</Link>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"footer\">\r\n                <p>Made with ❤️ and 🧑‍💻 by <i>Harsh Tripathi</i></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\UserMain.js",["78"],[],"import React, { useState,useEffect } from 'react'\r\nimport { Link, useNavigate,useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nexport default function UserMain() {\r\n    let navigate = useNavigate()\r\n    const [wf, setWf] = useState(\"\");\r\n    const [desc,setDesc] =useState(\"\");\r\n    const [allwf,setAllwf] = useState([])\r\n    const{id}=useParams();\r\n    useEffect(()=>{\r\n        loadUser();\r\n    },[]);\r\n\r\n    const loadUser=async()=>{\r\n        const result=await axios.get(`http://localhost:9191/workflow/workflowToInitialise/${id}`)\r\n        setAllwf(result.data)\r\n    }\r\n    const att=\"link\";\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.append('description', desc);\r\n    bodyFormData.append('attachments',att);\r\n\r\n    console.log(desc);\r\n\r\n    const onSubmit=async(e)=>{\r\n        axios({\r\n            method: \"post\",\r\n            url: `http://localhost:9191/workflowInstance/addWorkflowInstance/1/${wf}`,\r\n            data: bodyFormData,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          })\r\n            .then(function (response) {\r\n              //handle success\r\n              console.log(\"check1\");\r\n              console.log(response);\r\n            })\r\n            .catch(function (response) {\r\n              //handle error\r\n              console.log(response);\r\n            });\r\n        navigate(`/usermain/${id}`);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\r\n                    <Link className='btn btn-primary my-2' to={`/userins/${id}`}>See your Task</Link>\r\n                    <form onSubmit={(e)=>onSubmit(e)}>\r\n                    <div className='mb-3'>\r\n                            <label htmlFor='Name' className='form-label'>\r\n                               Enter WorkFlow ID for Instantiate\r\n                            </label>\r\n                            <input\r\n                                type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter Worklfow ID'\r\n                                //name=\"wf_name\"\r\n                                //value=\"wf_name\"\r\n                                onChange={(e) => setWf(e.target.value)}\r\n                                required\r\n                            />\r\n                                <input\r\n                                type={\"text\"}\r\n                                className=\"form-control\"\r\n                                placeholder='Enter Worklfow Desc.'\r\n                                //name=\"wf_desc\"\r\n                                //value=\"wf_name\"\r\n                                onChange={(e) => setDesc(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button type='submit'  className='btn btn-outline-primary'>Submit</button>\r\n                        {/* <Link className='btn btn-outline-danger mx-2' to=\"/\">Cancel</Link> */}\r\n                    </form >\r\n                    <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Id</th>\r\n                            <th scope=\"col\">Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            allwf.map((flows, index) => (\r\n                                <tr>\r\n                                    {/* <th scope=\"row\" key={index}>{index + 1}</th> */}\r\n                                    <td>{flows.workflowId}</td>\r\n                                    <td>{flows.name}</td>\r\n                                </tr>\r\n                            )\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <p>Made with ❤️ and 🧑‍💻 by <i>Harsh Tripathi</i></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\UsertaskIns.js",["79","80"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useParams,useNavigate } from 'react-router-dom'\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nexport default function Tasks() {\r\n    let navigate = useNavigate()\r\n    const [tasks,setTask]=useState([])\r\n    const [taskins,setTaskIns]=useState([])\r\n    const [actions,setAction]=useState([])\r\n    const [act,setSelectedCategory]=useState(\"\")\r\n    const [comment,setComment]=useState([])\r\n\r\n    var bodyFormData = new FormData();\r\n    const{id}=useParams();\r\n    useEffect(()=>{\r\n        loadUser();\r\n    },[]);\r\n\r\n    bodyFormData.append('taskInstanceId', taskins);\r\n    bodyFormData.append('actionId', act);\r\n    bodyFormData.append('comments', comment);\r\n    console.log(act)\r\n    console.log(\"comment\")\r\n\r\n    const onSubmit=async(e)=>{\r\n        axios({\r\n            method: \"post\",\r\n            url: `http://localhost:9191/action/performAction/${id}`,\r\n            data: bodyFormData,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n            //navigate(`/`);\r\n            \r\n        });\r\n        // navigate(`/usermain`);\r\n        // navigate(0);\r\n    };\r\n\r\n\r\n\r\n    const loadUser=async()=>{\r\n        const result=await axios.get(`http://localhost:9191/taskInstance/fetchTaskInstances/${id}`)\r\n        setTask(result.data);\r\n\r\n        const resultact =await axios.get(`http://localhost:9191/action/viewActions/${id}`)\r\n        setAction(resultact.data);\r\n        console.log(resultact.data)\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n    <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n        <div className='py-4'>\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Comment</th>\r\n                            <th scope=\"col\">Attchments</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\">Desc</th>\r\n                            <th scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            tasks.map((task, index) => (\r\n                                \r\n                                <tr>\r\n                                    <th scope=\"row\" key={index}>{index + 1}</th>\r\n                                    <td>{task.comments}</td>\r\n                                    <td>{task.attachments}</td>\r\n                                    <td>{task.status}</td>\r\n                                    <td>{task.workflowInstance.description}</td>\r\n                                    {/* {setTaskIns(task.taskInstanceId)} */}\r\n                                    {/* <td>{task.workflowInstance.workflow.name}</td> */}\r\n                                    <td>\r\n\r\n                                    <form onSubmit={(e)=>onSubmit(e)}>\r\n                                        <div className='mb-3'>\r\n                                            <label htmlFor='Name' className='form-label'>\r\n                                                Comments\r\n                                            </label>\r\n                                            <input\r\n                                                type={\"text\"}\r\n                                                className=\"form-control\"\r\n                                                placeholder='comments'\r\n                                                //value=\"wf_name\"\r\n                                                onChange={(e)=>{setComment(e.target.value);setTaskIns(task.taskInstanceId)}}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n\r\n                                        Actions\r\n                                            <div className='mb-3'>\r\n                                                \r\n                                                <select\r\n                                                    //value={selectedCategory}\r\n                                                    onClick={(e) => setSelectedCategory(e.target.value)}\r\n                                                    className=\"product-dropdown\"\r\n                                                    >\r\n                                                    {actions.map((action) => (\r\n                                                        <option value={action.actionId}>{action.actionId}</option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n                                        \r\n                                        <button type='submit'  className='btn btn-outline-primary'>Submit</button>\r\n                                        </form>\r\n\r\n                                        {/* <Link className=\"btn btn-primary mx-2\" to={`/usermain`}>\r\n                                            Action\r\n                                        </Link> */}\r\n                                        \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n\r\n            <Link className='btn btn-primary my-2' to={`/usermain/${id}`}>Back to Home</Link>\r\n        </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n                <p>Made with ❤️ and 🧑‍💻 by <i>Harsh Tripathi</i></p>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n","C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\AddAction.js",["81","82"],[],"C:\\Users\\naikp\\Desktop\\DMWorkflowfinal\\workflow_Datamodel_front\\src\\services\\Admincreate.js",[],[],{"ruleId":"83","severity":1,"message":"84","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":18},{"ruleId":"83","severity":1,"message":"87","line":1,"column":20,"nodeType":"85","messageId":"86","endLine":1,"endColumn":29},{"ruleId":"83","severity":1,"message":"88","line":2,"column":50,"nodeType":"85","messageId":"86","endLine":2,"endColumn":61},{"ruleId":"83","severity":1,"message":"87","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"89","line":2,"column":28,"nodeType":"85","messageId":"86","endLine":2,"endColumn":37},{"ruleId":"83","severity":1,"message":"90","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":14},{"ruleId":"83","severity":1,"message":"91","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":13},{"ruleId":"83","severity":1,"message":"92","line":15,"column":11,"nodeType":"85","messageId":"86","endLine":15,"endColumn":32},{"ruleId":"83","severity":1,"message":"93","line":23,"column":12,"nodeType":"85","messageId":"86","endLine":23,"endColumn":23},{"ruleId":"83","severity":1,"message":"94","line":36,"column":11,"nodeType":"85","messageId":"86","endLine":36,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":62,"column":10,"nodeType":"97","endLine":62,"endColumn":14,"suggestions":"98"},{"ruleId":"83","severity":1,"message":"99","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"100","line":12,"column":7,"nodeType":"97","endLine":12,"endColumn":9,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":27,"column":13,"nodeType":"85","messageId":"104","endLine":27,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":14,"column":7,"nodeType":"97","endLine":14,"endColumn":9,"suggestions":"105"},{"ruleId":"83","severity":1,"message":"106","line":7,"column":9,"nodeType":"85","messageId":"86","endLine":7,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":18,"column":7,"nodeType":"97","endLine":18,"endColumn":9,"suggestions":"107"},{"ruleId":"83","severity":1,"message":"91","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":13},{"ruleId":"95","severity":1,"message":"108","line":23,"column":8,"nodeType":"97","endLine":23,"endColumn":10,"suggestions":"109"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'useParams' is defined but never used.","'Select' is defined but never used.","'xtype' is defined but never used.","'onOptionChangeHandler' is assigned a value but never used.","'selectValue' is assigned a value but never used.","'refreshPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["111"],"no-redeclare","'url' is already defined.","redeclared",["112"],"'navigate' is assigned a value but never used.",["113"],"React Hook useEffect has a missing dependency: 'loadUsers'. Either include it or remove the dependency array.",["114"],{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},{"desc":"117","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [navigate, wf]",{"range":"123","text":"124"},"Update the dependencies array to be: [loadUser]",{"range":"125","text":"126"},{"range":"127","text":"126"},{"range":"128","text":"126"},"Update the dependencies array to be: [loadUsers]",{"range":"129","text":"130"},[1714,1718],"[navigate, wf]",[330,332],"[loadUser]",[460,462],[601,603],[664,666],"[loadUsers]"]